@page "/contract/create"

@inject IContractService ContractService
@inject NavigationManager NavigationManager

<EditForm Model="@Command" OnValidSubmit="Submit">
    <FluentValidator />

    <h3>Новый договор</h3>
    <p class="w-50">
        <MatTextField @bind-Value="Command.Name" Label="Название договора" Outlined="true" Style="width: 100%;"/>
        <ValidationMessage For="(()=>Command.Name)"></ValidationMessage>
    </p>
    <p class="w-50">
        <MatTextField @bind-Value="Command.ContractNumber" Label="Номер договора" Outlined="true" Style="width: 100%;"/>
        <ValidationMessage For="(()=>Command.ContractNumber)"></ValidationMessage>
    </p>
    <p class="w-50">
        <MatTextField @bind-Value="Command.DomesticNumber" Label="Внутренний номер договора" Outlined="true" Style="width: 100%;"/>
        <ValidationMessage For="(()=>Command.DomesticNumber)"></ValidationMessage>
    </p>
    <p class="py-4">
        <MatButton Raised="true" Icon="add" type="submit"> Добавить</MatButton>
    </p>
</EditForm>

@code {

    CreateContractVm Command { get; set; } = new CreateContractVm();

    protected async Task Submit()
    {
        var contractId = await ContractService.CreateContract(Command);

        NavigationManager.NavigateTo($"/contract/{contractId}/detail");
    }

}
