
<div class="">
    <MatNumericUpDownField Label="Адрес устройства" @bind-Value="Settings.Address" Minimum="0" Maximum="256" @onchange="ValueChanged" Outlined="true" Style="width:100%;">
    </MatNumericUpDownField>
</div>
<div class="mb-2">
    <MatSelect Label="Baud rate" @bind-Value="Settings.BoudRate" @onchange="ValueChanged" Outlined="true" Style="width:100%;">
        <MatOptionString Value="9600">9600</MatOptionString>
        <MatOptionString Value="19200">19200</MatOptionString>
        <MatOptionString Value="38400">38400</MatOptionString>
        <MatOptionString Value="57600">57600</MatOptionString>
        <MatOptionString Value="115200">115200</MatOptionString>
    </MatSelect>
</div>
<div class="mb-2">
    <MatSelectItem Label="Parity" @bind-Value="Settings.Parity" Items="Enum.GetValues(typeof(Parity)).Cast<Parity>().ToArray()"
                   @onchange="ValueChanged" Outlined="true" Style="width:100%;">
    </MatSelectItem>
</div>
<div class="mb-2">
    <MatSelect Label="Data bits" @bind-Value="Settings.DataBits" @onchange="ValueChanged" Outlined="true" Style="width:100%;">
        <MatOptionString Value="7">7</MatOptionString>
        <MatOptionString Value="8">8</MatOptionString>
    </MatSelect>
</div>
<div class="mb-2">
    <MatSelect Label="Stop bit" @bind-Value="Settings.StopBit" @onchange="ValueChanged"  Outlined="true" Style="width:100%;">
        <MatOptionString Value="1">1</MatOptionString>
        <MatOptionString Value="1.5">1.5</MatOptionString>
        <MatOptionString Value="2">2</MatOptionString>
    </MatSelect>
</div>


@code {

    [Parameter]
    public EventCallback<ModbusSettingsVm> OnSettingsChanged { get; set; }

    [Parameter]
    public ModbusSettingsVm Settings { get; set; } = new ModbusSettingsVm();

    protected async Task ValueChanged(ChangeEventArgs e)
    {
        await OnSettingsChanged.InvokeAsync(Settings);
    }
}