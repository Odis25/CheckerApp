@using CheckerApp.Shared.Models.Commands

<div class="row mb-2">
    <div class="col">
        <MatTextField Label="Позиция по проекту" @bind-Value="Value.Position" Outlined="true" Style="width:100%"></MatTextField>
        <ValidationMessage For="()=> Value.Position"></ValidationMessage>
    </div>
</div>
<div class="row mb-2">
    <div class="col">
        <MatTextField Label="Серийный номер" @bind-Value="Value.SerialNumber" Outlined="true" Style="width:100%"></MatTextField>
        <ValidationMessage For="()=> Value.SerialNumber"></ValidationMessage>
    </div>
</div>
<div class="row mb-2">
    <div class="col">
        <MatTextField Label="Тип прибора" @bind-Value="Value.DeviceType" Outlined="true" Style="width:100%"></MatTextField>
        <ValidationMessage For="()=> Value.DeviceType"></ValidationMessage>
    </div>
</div>
<div class="row mb-2">
    <div class="col">
        <MatTextField Label="Модель прибора" @bind-Value="Value.DeviceModel" Outlined="true" Style="width:100%"></MatTextField>
        <ValidationMessage For="()=> Value.DeviceModel"></ValidationMessage>
    </div>
</div>
<div class="row">
    <div class="col">
        <MatSelectItem @bind-Value="Value.PanelType" Label="Тип информационного табло" Outlined="true" FullWidth="true" Items="panelTypes">
            <ItemTemplate Context="panelType">@panelType.GetDisplayName()</ItemTemplate>
        </MatSelectItem>
    </div>
</div>

@code {

    [Parameter]
    public CreateHardwareCommandVm Value { get; set; }

    [Parameter]
    public EventCallback<CreateHardwareCommandVm> ValueChanged { get; set; }

    private InformPanelType[] panelTypes = Enum.GetValues(typeof(InformPanelType)).Cast<InformPanelType>().ToArray();

}
