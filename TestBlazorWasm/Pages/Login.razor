@page "/log"
@inject HttpClient HttpClient
@using Microsoft.AspNetCore.WebUtilities

@inject NavigationManager Navigation


<div class="">

    <div class="card px-3 m-auto" style="width:500px;">
        <EditForm method="post" action="/loginuser" Model="User" OnSubmit="Submit">
            <div class="form-group">
                <label>Имя пользователя</label>
                <InputText @bind-Value="User.UserName" class="form-control" />
            </div>
            <div class="form-group">
                <label>Пароль</label>
                <InputText @bind-Value="User.Password" class="form-control" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Вход</button>
            </div>
        </EditForm>
    </div>
    
</div>

@code {

    [Parameter]
    public string ReturnUrl { get; set; }

    public UserCredentials User { get; set; } = new UserCredentials();

    public string Url { get; set; }

    protected override Task OnInitializedAsync()
    {
        var query = new Uri(Navigation.Uri).Query;

        if (QueryHelpers.ParseQuery(query).TryGetValue("returnUrl", out var value))
        {
            ReturnUrl = value;
        }
        User.ReturnUrl = ReturnUrl;
        return base.OnInitializedAsync();
    }

    private string Encode(string param)
    {
        return System.Web.HttpUtility.UrlEncode(param);
    }

    private async Task Submit()
    {
        var content = new StringContent(System.Text.Json.JsonSerializer.Serialize(User), System.Text.Encoding.UTF8, "application/json");

        var res = await HttpClient.PostAsync("/api/auth", content);
        
        //var res = await HttpClient.PostJsonAsync<UserCredentials>("api/auth", User);

        Url = await res.Content.ReadAsStringAsync();

        //Navigation.NavigateTo(ReturnUrl);
    }
}
